# -*- mode: ruby -*-
# # vi: set ft=ruby :

# origins:

# http://blog.scottlowe.org/2014/10/22/multi-machine-vagrant-with-yaml/
require 'yaml'
require 'pp'

basedir = ENV.fetch('USERPROFILE', '')
basedir = ENV.fetch('HOME', '') if basedir == ''
basedir = basedir.gsub('\\', '/')
debug = ENV.fetch('DEBUG', '')
debug = ( debug =~ (/^(true|yes|1)$/i))

dir = File.expand_path(File.dirname(__FILE__))

# NOTE: to solve trouble with NLS ACP like cyrillic, patch the bootstrap script
# e.g. for Vagrant 2.0.2, the '/c/HashiCorp/Vagrant/embedded/gems/gems/vagrant-2.0.2/bin/vagrant'
# with
# Encoding.default_external = Encoding.find('Windows-1251')
# Encoding.default_internal = Encoding.find('Windows-1251')
#
# further info see: http://qaru.site/questions/4642778/vagrant-windows-1251-encoding-error
# Read nodes details
nodes = {}
nodes = YAML.load(<<-NODES)
---
- name: 'urugeas'
  box: 'centos'
  ram: '512'
  ipaddress: '172.17.8.102'

NODES
if debug
  nodes.each do |box|
    pp box
  end
end

# Read box details
configs = YAML::load( <<-BOXES)
---
:boot: 'centos'
# centos 7.3 x64 with Puppet 4.10.x
# origin:
# https://app.vagrantup.com/mbrush/boxes/centos7-puppet/versions/1.1.1/providers/virtualbox.box
'centos':
  :image_name: 'centos'
  :box_memory: '512'
  :box_cpus: '1'
  :box_gui: false
  :config_vm_newbox: false
  :config_vm_default: 'linux'
  :config_vm_box: 'centos'
  :image_filename: 'centos7-puppet-x86_64.box'

BOXES
if debug
  pp configs
end
modulepath = '/opt/puppetlabs/puppet/modules'

# bind_ip=127.0.0.1

box_config = {}

Vagrant.configure('2') do |config|
  nodes.each do |box|
    box_name = box['name']
    box_config = configs[box['box']]
    box_gui = box_config[:box_gui] != nil && box_config[:box_gui].to_s.match(/(true|yes|1)$/i) != nil
    box_cpus = box_config[:box_cpus].to_i
    box_memory = box_config[:box_memory].to_i
    newbox = box_config[:config_vm_newbox]
    image_filename = box_config[:image_filename]
    box_url = "file://#{basedir}/Downloads/#{image_filename}"
    config.vm.synced_folder './' , '/vagrant'
    manifest = 'default.pp'
    config.vm.define box_name do |guest|
      guest.vm.box = box_config[:image_name]
      guest.vm.box_url = box_url
      guest.vm.network 'private_network', ip: box['ipaddress']
      guest.vm.provider :virtualbox do |vb|
        vb.name = box_name
        vb.memory = box_memory
      end
      # guest.vm.provision is a recommended scope
      config.vm.provision 'shell', inline: <<-SHELL
        sudo yum install -y vim
    UPGRADE_PUPPET=false
    # optionally upgrade puppet to the latest version
    if $UPGRADE_PUPPET ; then
      sudo rpm -Uvh https://yum.puppet.com/puppet5/puppet5-release-el-7.noarch.rpm
      sudo yum install -y puppet-agent
    fi
	# https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-7-on-centos-7-via-yum
	# change locale of the base image
cat<<EOF>/etc/environment
LANG=en_US.utf-8
LC_ALL=en_US.utf-8
EOF
MODULE_PATH='#{modulepath}'
# set to true - need stdlib 4.25+
DIRECT_INSTALL_PUPPET_MODULES=true

if $DIRECT_INSTALL_PUPPET_MODULES ; then
  if [ ! -d ${MODULE_PATH}/stdlib ]; then
    puppet module install 'puppetlabs-stdlib' --version '4.25.0' --target-dir $MODULE_PATH
    puppet module install 'puppetlabs-java' --version '1.3.0' --target-dir $MODULE_PATH
  fi

  # for encrypted yaml
  # gem install hiera-eyaml --no-rdoc --no-ri
fi
sudo yum install -qqy httpd
# for integration testing
sudo yum install -qqy java-1.8.0-openjdk
# install tomcat 8.5.x via direct download
# based on: https://www.howtoforge.com/tutorial/how-to-install-tomcat-on-centos/#step-install-apache-tomcat-
sudo groupadd tomcat
sudo useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
# TOMCAT_VERSION='8.5.30'
TOMCAT_VERSION='8.5.39'
# https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.39/bin/apache-tomcat-8.5.39.tar.gz
TOMCAT_PACKAGE="https://archive.apache.org/dist/tomcat/tomcat-8/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz"
sudo mkdir -p /opt/tomcat
pushd /opt
if wget --spider $TOMCAT_PACKAGE >/dev/null 2>&1 ; then
  # NOTE: Invalid progress type ‘none’.
  sudo wget -O apache-tomcat-8.5.tar.gz $TOMCAT_PACKAGE >/dev/null 2>&1
fi
sudo tar xzf /opt/apache-tomcat-8.5.tar.gz
sudo mv apache-tomcat-${TOMCAT_VERSION}/* tomcat/
sudo rmdir apache-tomcat-${TOMCAt_VERSION}/* tomcat/
sudo chown -hR tomcat:tomcat tomcat
popd

# prerequisite for vanilla puppetlabs-mysql https://github.com/puppetlabs/puppetlabs-mysql
sudo yum erase -qqy mariadb-libs mariadb
rpm -qa | grep -i percona | xargs -i sudo yum erase -qqy {}

# Post action to allow swiching the mysql service and directory permissions to the alternative use ("myuser"):
# and to survive the node reboot
MYSQL_USER='myuser'
if  ! (ps -uax | grep mys[q]l | grep -q $MYSQL_USER) ; then
  echo "Configuring mysql service to run under ${MYSQL_USER}"
  sudo cp /vagrant/modules/mysql_patch/files/mysqld.service /etc/systemd/system/mysql.service
  sudo cp /vagrant/modules/mysql_patch/files/mysqld.service /usr/lib/systemd/system/mysqld.service
  sudo cp /vagrant/modules/mysql_patch/files/mysqld_pre_systemd /usr/bin/mysqld_pre_systemd
  sudo cp /vagrant/modules/mysql_patch/files/my.cnf /etc/my.cnf
  sudo chown -R myuser:myuser /var/lib/mysql
  sudo systemctl daemon-reload
  # may also convert into Exec
  sudo chown myuser:myuser /var/log/mysqld.log
  # https://serverfault.com/questions/60711/chown-operation-not-permitted-for-root
  sudo systemctl enable mysqld
  sudo systemctl start mysqld
  # https://www.linode.com/docs/quick-answers/linux-essentials/introduction-to-systemctl/
  # based on https://gist.github.com/jniesen/aecf5ee3a3f3bd55c7a84ffe4c432408
  augtool -A
  set /augeas/load/Systemd/lens Systemd.lns
  set /augeas/load/Systemd/incl /usr/lib/systemd/system/mysqld.service
  ls /files/usr/lib/systemd/system/mysqld.service/Service/PermissionsStartOnly[value= 'true']
  set /files/usr/lib/systemd/system/mysqld.service/Service/PermissionsStartOnly/value 'true'
  puppet apply -d -e 'augeas { "change mysqld.service PermissionsStartOnly":
    context => "/files/usr/lib/systemd/system/mysqld.service",
    incl    =>  "/usr/lib/systemd/system/mysqld.service",
    lens    => "Systemd.lns",
    changes => [
      "set Service/PermissionsStartOnly/value \"true\"",
    ],
    onlyif  => "match /files/usr/lib/systemd/system/mysqld.service/Service/PermissionsStartOnly[value = \"true\"]  size == 0",
  }'

  puppet apply -d -e 'augeas { "change mysqld.service User and Group":
    context => "/files/usr/lib/systemd/system/mysqld.service",
    incl    =>  "/usr/lib/systemd/system/mysqld.service",
    lens    => "Systemd.lns",
    changes => [
      "set Service/User/value \"myuser\"",
      "set Service/Group/value \"myuser\"",
    ],
    onlyif  => "match /files/usr/lib/systemd/system/mysqld.service/Service/User[value = \"myuser\"] size == 0",
  }'
  # TODO: ins
fi

# for puppet testing install jq
sudo yum install -qqy jq
    SHELL
      # workaround for older Vagrant / Puppet 4 compatibility issue
      # NOTE: hiera arguments not set
      # config.vm.provision 'shell', inline: "puppet apply --modulepath=#{modulepath}:/vagrant/modules /vagrant/manifests/#{manifest}"

      config.vm.provision :puppet do |puppet|
        puppet.hiera_config_path = 'hiera.yaml'
        puppet.module_path       = 'modules'
        puppet.manifests_path    = 'manifests'
        puppet.manifest_file     = manifest
        puppet.options           = "--verbose --modulepath #{modulepath}:/vagrant/modules "
        puppet.working_directory = '/tmp/vagrant-puppet'
        config.vm.synced_folder 'hieradata/', '/tmp/vagrant-puppet/hieradata'
      end
      # based on: https://github.com/andrewwardrobe/PuppetIntegration/blob/master/Vagrantfile
      # NOTE: may also will to install InSpec https://github.com/inspec/inspec
      config.vm.provision 'shell', inline: <<-EOF
        echo Checking prerequisites for running rspec
        SCL_BASE_PATH='/opt/rh/rh-ruby23/root'
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${SCL_BASE_PATH}/usr/lib64
        ruby --version | grep -q ' 2.3.'
        if [ $? == 0 ] ; then
          echo 'Ruby 2.3.x is installed';
        else
          echo Installing prerequisites for running spec
          # https://www.softwarecollections.org/en/scls/rhscl/rh-ruby23/
          # https://access.redhat.com/solutions/527703
          yum install -q -y centos-release-scl yum-utils
          yum-config-manager --enable rhel-server-rhscl-7-rpms
          yum install -q -y rh-ruby23
          # usual culmination is with embarking in a new bash environment
          source scl enable rh-ruby23
          # NOTE: To make visible to root user, install alternatives in /usr/bin
          # not in /usr/local/bin
          update-alternatives --install /usr/bin/ruby ruby ${SCL_BASE_PATH}/usr/bin/ruby 10
          update-alternatives --install /usr/bin/gem gem ${SCL_BASE_PATH}/usr/bin/gem 10
        fi
        RAKE_VERSION='12.3.1'
        gem install --no-ri --no-rdoc rake:${RAKE_VERSION} specinfra:2.76.1 net-ssh:5.0.2 rspec:3.8.0 rspec-core:3.8.0 rspec-support:3.8.0 rspec-its:1.2.0 rspec-expectations:3.8.1 serverspec:2.41.3
        update-alternatives --install /usr/bin/rake rake ${SCL_BASE_PATH}/usr/local/share/gems/gems/rake-${RAKE_VERSION}/exe/rake 10
        echo Done
        echo Running spec
        cd /vagrant/local_test
        rake spec
      EOF
    end
  end
end
