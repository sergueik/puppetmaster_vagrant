# -*- mode: ruby -*-
# vi: set ft=ruby :

# based on: https://github.com/hashicorp/consul/tree/master/demo/vagrant-cluster
# https://www.consul.io/intro/getting-started/services.html
# used to test
# https://www.consul.io/api/agent/check.html
# https://www.consul.io/api/catalog.html
# https://www.consul.io/docs/agent/options.html
# Override consul version

consul_version = ENV.fetch('CONSUL_VERSION', '1.4.0') # nil
# 0.8.0 is the last version when exec was ebaled by default
# https://groups.google.com/forum/#!topic/consul-tool/zE4G9ixWq60
consul_init = ENV.fetch('CONSUL_INIT', nil)
# see https://github.com/chavo1/consul-lab/blob/master/Vagrantfile
# Consul is packaged as plain archive by hashicorp:
# old releases are available in https://releases.hashicorp.com/consul/0.8.5/
# the instructions for rpm repackaging are in https://github.com/tomhillable/consul-rpm

box_name = ENV.fetch('BOX_NAME', 'puppetlabs/ubuntu-16.04-64-puppet')
debug_puppet = ENV.fetch('DEBUG_PUPPET', '')
debug_puppet = true if debug_puppet =~ /^(?:true|yes|1)$/i

debug = ENV.fetch('DEBUG', false)
debug = true if debug =~ /^(?:true|yes|1)$/i

# NOTE: this also is a default module path
# but it varies with releases of Puppet
modulepath = '/opt/puppetlabs/puppet/modules'

VAGRANTFILE_API_VERSION = '2'

basedir = (ENV.fetch('HOME','') || ENV.fetch('USERPROFILE', '')).gsub('\\', '/')
box_memory = ENV.fetch('BOX_MEMORY', '512').to_i

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box =  box_name
  # using localy cached vagrant box
  # invoke-webrequest -uri 'https://app.vagrantup.com/puppetlabs/boxes/ubuntu-16.04-64-puppet/versions/1.0.0/providers/virtualbox.box' -outfile "${env:USERPROFILE}\Downloads\ubuntu-16.04-64-puppet.box"
  config_vm_box_name =  'ubuntu-16.04-64-puppet.box'

  config.vm.box_url = "file://#{basedir}/Downloads/#{config_vm_box_name}"
  instance_name_prefix = 'node'
  instance_ip_common = '192.168.51'
  1.upto(2) do |n|
    # node_hostname = "node#{n}"
    # node_ip = "192.168.51.#{9+n}"
    node_hostname = '%s%d' % [instance_name_prefix, n]
    node_ip = '%s.%02d' % [instance_ip_common, n + 9 ]
    config.vm.define node_hostname do |box|
      # only required for
      config.vm.boot_timeout = 600
      config.vm.provider :virtualbox do |v|
        v.customize ['modifyvm', :id, '--cableconnected1', 'on']
        v.customize ['modifyvm', :id, '--memory', box_memory ]
      end

      config.vm.synced_folder './' , '/vagrant'
      config.vm.synced_folder 'hieradata/', '/tmp/vagrant-puppet/hieradata'

      box.vm.hostname = node_hostname
      box.vm.network "private_network", ip: node_ip
      shell_script = <<-SHELL
      # origin: http://frederic-wou.net/puppet-apt-update-error-public-key-not-available-no_pubkey-7f438280ef8d349f/
      sudo gpg --keyserver pgp.mit.edu --recv-key 7F438280EF8D349F
      sudo gpg --keyserver pgp.mit.edu --recv-key 7F438280EF8D349F
      gpg -a --export EF8D349F | sudo apt-key add -
      sudo apt-get -qqy update
      apt-key list | grep -i -B 3 puppet

      # NOTE: upgrading puppet-agent from apt repository will upgrade it to
      sudo apt-get -qqy install puppet-agent
      # /opt/puppetlabs/bin/puppet  --version
      # 4.10.12
      # do not install puppet master by mistake

# based on: https://github.com/chavo1/consul-lab

echo 'Installing dependencies ...'
for B in vim curl jq unzip ; do
  which $B &>/dev/null || {
    sudo apt-get install -qqy $B
  }
done
which ping &>/dev/null || {
  sudo apt-get install -qqy inetutils-ping
}

which dig &>/dev/null || {
  sudo apt-get install -qqy dnsutils
}
#=========================================================
# install web service for consul to discover and monitor
#
which nginx &>/dev/null || {
  sudo apt-get install -qqy nginx
}

service nginx stop; service nginx start

#=========================================================
if [ -z "${CONSUL_VERSION}" ] ; then
  echo 'Determining latest Consul version.'
  CHECKPOINT_URL='https://checkpoint-api.hashicorp.com/v1/check'
  CONSUL_VERSION=$(curl -s "${CHECKPOINT_URL}/consul" | jq '.current_version' | tr -d '"')
  # force re-download by removing '/tmp/consul.zip'
  # this is easier than extract consul and run
  # ./consul  --version

  rm -f '/tmp/consul.zip'
fi
#=========================================================
echo "Download Consul version ${CONSUL_VERSION}"
cd /tmp/
if [ ! -e 'consul.zip' ] ; then
  curl -s -o consul.zip -s https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip
fi
#=========================================================
echo "Install Consul version ${CONSUL_VERSION}"
cd /tmp
rm -fr '/tmp/consul'
unzip consul.zip
sudo chmod +x consul
sudo mv consul /usr/bin

#=========================================================
sudo mkdir -p /etc/consul.d
sudo chmod a+w /etc/consul.d
sudo cat <<EOF | jq -c "." - > '/etc/consul.d/web.json'
{
  "service": {
    "name": "web",
    "tags": [
      "nginx"
    ],
    "port": 80,
    "check": {
      "args": [
        "curl",
        "localhost"
      ],
      "interval": "120s"
    }
  }
}

EOF
sudo cat <<EOF | jq -c '.' - > '/etc/consul.d/ping.json'
{
  "check": {
    "name": "ping",
    "args": [
      "ping",
      "-c1",
      "google.com"
    ],
    "interval": "30s"
  }
}

EOF


# NOTE: enforcing "disable_remote_exec" to be false
# based on workaround from https://stackoverflow.com/questions/53151941/consul-exec-doesnt-do-anything
# see also: https://www.consul.io/docs/agent/options.html#disable_remote_exec

mkdir -p /tmp/consul
INSTANCE_NAME_PREFIX='#{instance_name_prefix}'
hostname | grep -q "${INSTANCE_NAME_PREFIX}1"
if [ $? -eq 0 ]; then
  echo 'Starting consul agent as a server on ' $(hostname)
  consul agent -server -bootstrap-expect=1 \
    -data-dir=/tmp/consul -node=agent-one -bind=192.168.51.10 \
    -enable-script-checks=true -hcl 'disable_remote_exec=false' -config-dir=/etc/consul.d &>/dev/null &
else
  echo 'Starting consul agent on ' $(hostname)
  consul agent -data-dir=/tmp/consul -node=agent-two \
    -bind=192.168.51.11 -hcl 'disable_remote_exec=false' -enable-script-checks=true -config-dir=/etc/consul.d &>/dev/null &
fi

# based on: https://github.com/chavo1/consul-vagrant
# NOTE: service is not enabled atm
sudo cat <<EOF | jq -c '.' - > '/etc/consul.d/consul.json'
{
  "bootstrap_expect": 2,
  "client_addr": "0.0.0.0",
  "data_dir": "/tmp/consul",
  "server": true,
  "retry_join": [
    "192.168.51.10",
    "192.168.51.11"
  ],
  "ui": true,
  "disable_remote_exec": false,
  "verify_incoming": false,
  "verify_outgoing": false
}
EOF
sudo cat <<EOF | tee '/etc/init/consul.conf'
description "consul"

start on runlevel [2345]
stop on runlevel [!2345]

respawn
respawn limit 10 5
umask 022
chdir /tmp/consul
env GOMAXPROCS="2"
env PATH="/usr/local/bin:/usr/bin:/bin"
kill signal TERM
reload signal HUP
EOF
#
echo "exec consul agent -config-file=/etc/consul.d/consul.json -advertise=${NODE_IP}" -hcl 'disable_remote_exec=false' | tee -a /etc/init/consul.conf
if [ ! -z "${CONSUL_INIT}" ] ; then
  service consul start
fi

# pre-install common Puppet modules
# NOTE: default installed to '/etc/puppetlabs/code/environments/production/modules'
MODULE_PATH='#{modulepath}'
# set to true - need stdlib 4.25+
DIRECT_INSTALL_PUPPET_MODULES=true

if $DIRECT_INSTALL_PUPPET_MODULES ; then
  if [ ! -d ${MODULE_PATH}/stdlib ]; then
    puppet module install 'puppetlabs-stdlib' --version '4.25.0' --target-dir $MODULE_PATH
    puppet module install 'puppetlabs-java' --version '1.3.0' --target-dir $MODULE_PATH
  fi
  if [ ! -d ${MODULE_PATH}/consul ]; then
     puppet module install 'KyleAnderson-consul' --version '5.0.3' --target-dir $MODULE_PATH
  fi

  # for encrypted yaml
  # gem install hiera-eyaml --no-rdoc --no-ri
fi
COPY_MODULES=true
if [ $COPY_MODULES ] ; then
  # ln -s /opt/puppetlabs/puppet/modules/consul /vagrant/modules/consul
  # failed to create symbolic link '/vagrant/modules/consul': Protocol error
  mkdir /vagrant/modules/consul
  cp -R /opt/puppetlabs/puppet/modules/consul/* /vagrant/modules/consul
  # dependencies need to be copied tooo
  cp -R /opt/puppetlabs/puppet/modules/ /vagrant/
fi
      SHELL
      # NOTE: the order of provision chunks can be wrong:
      # 'shell' after 'puppet'
      # https://github.com/hashicorp/vagrant/issues/4877
      box.vm.provision 'shell',
        env: {'CONSUL_VERSION' => consul_version,
              'NODE_IP' => node_ip   },
        # NOTE: the EOF is already in use in the embedded shell script
        inline: shell_script
      # use Puppet Apply provisioner
      box.vm.provision :puppet do |p|
        p.binary_path       = '/opt/puppetlabs/bin'
        p.working_directory = '/tmp/vagrant-puppet'
        p.hiera_config_path = 'hiera.yaml'
        p.module_path       = 'modules'
        p.manifests_path    = 'manifests'
        p.manifest_file     = 'default.pp'

        # https://puppet.com/docs/puppet/4.10/dirs_modulepath.html
        p.options           =
          if debug_puppet
            "--debug --verbose --modulepath #{modulepath}:/vagrant/modules"
          else
            "--verbose --modulepath #{modulepath}:/vagrant/modules"
          end
        if debug
          $stderr.puts ('puppet options: ' + puppet.options )
        end
      end
    end
  end
end
## # Manual  cluster validation steps
## # from https://github.com/chavo1/consul-lab
## # see also: https://github.com/chavo1/consul-vagrant, https://github.com/chavo1/consul_labs
## # all done on 1
## # from 1 (192.168.51.10) join node2
## consul join 192.168.51.11
## Successfully joined cluster by contacting 1 nodes.
##
## # dig 2
## dig @127.0.0.1 -p 8600 agent-two.node.consul
##
## # check cluster health (will be no output but the status)
## curl -I -X GET http://localhost:8500/v1/health/state/critical
## echo $?
## 0
#
# can not use embedded Ruby from the Puppet agent: many rspec critical gems are lacking
# /opt/puppetlabs/puppet/bin/
# for quick test, install Ruby
# apt-get install -qqy ruby2.3
# gem install --no-rdoc --no-ri serverspec
# mkdir -p spec/localhost
# copy the stock Rakefile and minimal spec/spec_helper.rb
# vi spec/localhost/sample_spec.rb
# rake spec
