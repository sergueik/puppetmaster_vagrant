# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = '2'
basedir = ENV.fetch('USERPROFILE', '')
basedir = ENV.fetch('HOME', '') if basedir == ''

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # set to false, if you do NOT want to check the correct VirtualBox Guest Additions version when booting this box
  if defined?(VagrantVbguest::Middleware)
    config.vbguest.auto_update = true
  end
  config.vm.box = 'ubuntu/xenial64-puppet'
  # NOTE: Vagrant provision failed on a few Ubuntu 16.04 base boxes, in particular the Ubuntu 16.04 with Docker installed
  # with
  # timeout during server version negotiating

  # https://atlas.hashicorp.com/puppetlabs/boxes/ubuntu-16.04-64-puppet
  # config.vm.box = 'puppetlabs/ubuntu-16.04-64-puppet'
  config_vm_box_name = 'ubuntu-16.04-64-puppet.box'
  config.vm.box_url = "file://#{basedir}/Downloads/#{config_vm_box_name}"

  # version only relevant for cloud images
  # config.vm.box_version = '1.0.1'
  config.vm.network :forwarded_port, guest: 5601, host: 5601
  config.vm.network :forwarded_port, guest: 9200, host: 9200
  config.vm.network :forwarded_port, guest: 9300, host: 9300

  config.vm.provider :virtualbox do |vb|
    vb.customize ['modifyvm', :id, '--cpus', '2', '--memory', '2048']
  end

  config.vm.provider 'vmware_fusion' do |v, override|
    v.provision 'shell', path: 'ubuntu.sh'
    v.box = 'phusion/ubuntu-16.04-amd64'
    v.vmx['numvcpus'] = '2'
    v.vmx['memsize'] = '2048'
  end
  config.vm.provision 'shell', path: 'setup.sh'
  config.vm.provision 'shell', inline: '/opt/puppetlabs/bin/puppet apply --modulepath=/etc/puppetlabs/code/environments/production/modules /vagrant/manifests/default.pp'
end
